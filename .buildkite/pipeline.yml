agents:
  queue: clima
steps:

  - label: "Test on derecho"
    command:
      - julia --project=.buildkite -e 'using Pkg; Pkg.instantiate()'
      - mpiwrapperexec -n 2 set_gpu_rank nsys profile --trace=nvtx,cuda,mpi --output=report_%q{PMI_RANK} --force-overwrite true julia --project=.buildkite .buildkite/test_cuda_mpi.jl
      - nsys stats --report cuda_gpu_trace report_0.nsys-rep --force-export true
      - nsys stats --report cuda_gpu_trace report_0.nsys-rep --force-export true | grep -E "memcpy (Peer-to-Peer|PtoP)"
    agents:
      queue: derecho
      pbs_l_select: "1:ngpus=2:ncpus=64"
      pbs_l_walltime: "00:10:00"
      pbs_q: develop
      modules: climacommon/2025_02_25

  - label: "Test on clima"
    command:
      - julia --project=.buildkite -e 'using Pkg; Pkg.instantiate()'
      - srun nsys profile --trace=nvtx,cuda,mpi --output=report_%q{PMI_RANK} --force-overwrite true julia --project=.buildkite .buildkite/test_cuda_mpi.jl
      - nsys stats --report cuda_gpu_trace report_0.nsys-rep --force-export true
      - nsys stats --report cuda_gpu_trace report_0.nsys-rep --force-export true | grep -E "memcpy (Peer-to-Peer|PtoP)"
    agents:
      queue: clima
      slurm_ntasks: 2
      slurm_gpus_per_task: 1
      slurm_cpus_per_task: 4
      slurm_time: "00:10:00"
      modules: climacommon/2024_10_09

  - label: "Test on new-central"
    command:
      - julia --project=.buildkite -e 'using Pkg; Pkg.instantiate()'
      # Using srun crashes upon MPI.jl initialization
      - mpirun -n 2 nsys profile --trace=cuda,mpi --mpi-impl=openmpi --force-overwrite true julia --project=.buildkite .buildkite/test_cuda_mpi.jl
      - nsys stats --report cuda_gpu_trace report1.nsys-rep --force-export true
      - nsys stats --report cuda_gpu_trace report1.nsys-rep --force-export true | grep -E "memcpy (Peer-to-Peer|PtoP)"
    agents:
      queue: new-central
      slurm_ntasks: 2
      slurm_gpus_per_task: 1
      slurm_cpus_per_task: 4
      slurm_time: "00:10:00"
      modules: climacommon/2024_10_09
    soft_fail: true

  - label: "Test on GCP"
    command:
      - julia --project=.buildkite -e 'using Pkg; Pkg.instantiate()'
      - julia --project=.buildkite -e 'using Pkg; Pkg.add("CUDA"); using CUDA; CUDA.set_runtime_version!(local_toolkit=true)'
      - julia --project=.buildkite -e 'using Pkg; Pkg.add("MPIPreferences"); using MPIPreferences; use_system_binary(library_names="/sw/openmpi-5.0.5/lib/libmpi", mpiexec="/sw/openmpi-5.0.5/bin/mpiexec", force=true)'

      - mpiexec -n 2 nsys profile --trace=cuda,mpi --mpi-impl=openmpi --force-overwrite true julia --project=.buildkite .buildkite/test_cuda_mpi.jl
      - nsys stats --report cuda_gpu_trace report1.nsys-rep --force-export true
      - nsys stats --report cuda_gpu_trace report1.nsys-rep --force-export true | grep -E "memcpy (Peer-to-Peer|PtoP)"
    agents:
      queue: gcp
      slurm_ntasks: 2
      slurm_gpus_per_task: 1
      slurm_cpus_per_task: 4
      slurm_time: "00:10:00"
    soft_fail: true

