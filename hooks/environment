#!/bin/bash

# The `environment` hook will run before all other commands, and can be used
# to set up secrets, data, etc. Anything exported in hooks will be available
# to the build script.
#
# For example:
#
# export SECRET_VAR=token

set -euo pipefail # exit on failure or unset variable
#set -x  # show all the commands that are being executed

export SLURM_BUILDKITE_PATH="$(dirname "${BUILDKITE_BIN_PATH}")"
export GIT_SSH_COMMAND="ssh -i ${SLURM_BUILDKITE_PATH}/.ssh/id_rsa -o IdentitiesOnly=yes"
export CI_BUILD_DIR="${BUILDKITE_BUILD_PATH}/${BUILDKITE_PIPELINE_SLUG}/${BUILDKITE_BUILD_NUMBER}"
export JULIA_DEPOT_PATH="${JULIA_DEPOT_PATH:-$CI_BUILD_DIR/depot/default}"
export BUILDKITE_BUILD_CHECKOUT_PATH="${CI_BUILD_DIR}/${BUILDKITE_PIPELINE_SLUG}"

# Slurm Job Info

if [ "$BUILDKITE_AGENT_META_DATA_QUEUE" != "derecho" ]; then
    source /etc/profile.d/modules.sh
    echo "--- Slurm Job ID: ${SLURM_JOB_ID}"
    scontrol show job ${SLURM_JOB_ID} --details
    scontrol show node ${SLURM_JOB_NODELIST}

    export TMPDIR="/tmp/slurm-${SLURM_JOB_ID}"
else
    echo "--- PBS Job ID: ${PBS_JOBID}"
    qstat -f ${PBS_JOBID} || {
        echo "Error: qstat failed" >&2
    }
    echo "Current nodes: $(cat $PBS_NODEFILE)"
fi

echo "--- Queue: $BUILDKITE_AGENT_META_DATA_QUEUE"
echo "JULIA_DEPOT_PATH: $JULIA_DEPOT_PATH"

# Create TMPDIR on all nodes
case "$BUILDKITE_AGENT_META_DATA_QUEUE" in
    "new-central")
        source "${SLURM_BUILDKITE_PATH}/cluster_environments/caltech_hpc.sh"
        ;;
    "clima")
        # Clima only has one node
        mkdir -p "${TMPDIR}"
        ;;
    "derecho")
        source "${SLURM_BUILDKITE_PATH}/cluster_environments/derecho.sh"
        ;;
    "test")
        mkdir -p "${TMPDIR}"
        echo "--- Running on test queue"
        ;;
    *)
        echo "Error: Unknown queue '$BUILDKITE_AGENT_META_DATA_QUEUE'. Exiting."
        exit 1
        ;;
esac

ulimit -c unlimited
printenv TMPDIR

# Load modules after sourcing cluster-specific environment
module load ${BUILDKITE_AGENT_META_DATA_MODULES:-}

# this is set to avoid rare race conditions on the same node with concurrent (step) jobs
export OMPI_MCA_orte_tmpdir_base="$TMPDIR"

# From https://stackoverflow.com/a/51141872, to remove colors from modules
# (Color tags mess up the builkite log)
module_list=$(module list | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g')

printf -- '--- ' && echo $module_list

if [ -n "${SLURM_GPUS_ON_NODE:-}" ]; then
    echo "--- GPUs available on ${HOSTNAME}"
    nvidia-smi -L
fi

log_missing_file() {
    echo "Warning: File $1 not found."
}

if [[ "${BUILDKITE_PIPELINE_NAME,,}" == *"climaocean"* ]]; then
    if [ -f "$BUILDKITE_PATH/.climaocean_documenter" ]; then
        export DOCUMENTER_KEY=$(cat "$BUILDKITE_PATH/.climaocean_documenter")
    else
        log_missing_file "$BUILDKITE_PATH/.climaocean_documenter"
    fi
fi

if [ -f "$BUILDKITE_PATH/.slack_token" ]; then
    export SLACK_TOKEN=$(cat "$BUILDKITE_PATH/.slack_token")
else
    log_missing_file "$BUILDKITE_PATH/.slack_token"
fi

if [ -f "$BUILDKITE_PATH/.ecco_username" ]; then
    export ECCO_USERNAME=$(cat "$BUILDKITE_PATH/.ecco_username")
else
    log_missing_file "$BUILDKITE_PATH/.ecco_username"
fi

if [ -f "$BUILDKITE_PATH/.ecco_password" ]; then
    export ECCO_PASSWORD=$(cat "$BUILDKITE_PATH/.ecco_password")
else
    log_missing_file "$BUILDKITE_PATH/.ecco_password"
fi
